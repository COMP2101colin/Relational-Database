SET SQL_MODE = "STRICT_ALL_TABLES";
SET DEFAULT_STORAGE_ENGINE =  INNODB;

/*
 Question 1 (10 marks)
 
 a) Create two tables with the same numbers of columns and datatypes (mininum 3 columns in each table) (3 marks)
 
 b) Populate that table with data (3 marks)
 
 c) Create a SELECT statement for each table and UNION them together (4 marks)
 
*/
 CREATE DATABASE ASSIGNMENT6;
 USE ASSIGNMENT6;

 CREATE TABLE MOVIE_INFO(
 MOVIE_ID NUMERIC(30) NOT NULL PRIMARY KEY,
 MOVIE_TITLE VARCHAR(30) NOT NULL,
 RELEASE_DATE DATE );
 
 CREATE TABLE MOVIE_DIRECTOR(
 DRCTR_ID VARCHAR(30) NOT NULL PRIMARY KEY,
 MOVIE_ID NUMERIC(30) NOT NULL,
 DRCTR_AGE NUMERIC(30) NOT NULL );
 
 INSERT INTO MOVIE_INFO (MOVIE_ID, MOVIE_TITLE, RELEASE_DATE) VALUE ('0023','THOR:RAGNAROK','2017-09-03');
 INSERT INTO MOVIE_INFO (MOVIE_ID, MOVIE_TITLE, RELEASE_DATE) VALUE ('0077','FAST8','2017-04-14');
 INSERT INTO MOVIE_INFO (MOVIE_ID, MOVIE_TITLE, RELEASE_DATE) VALUE ('0041','BEAUTY AND THE BEAST','2017-03-17');
 INSERT INTO MOVIE_INFO (MOVIE_ID, MOVIE_TITLE, RELEASE_DATE) VALUE ('0039','WONDER WOMAN','2017-05-15');
 INSERT INTO MOVIE_INFO (MOVIE_ID, MOVIE_TITLE, RELEASE_DATE) VALUE ('0055','STAR WARS:THE LAST JEDI','2017-12-15');
 
 INSERT INTO MOVIE_DIRECTOR (DRCTR_ID, MOVIE_ID, DRCTR_AGE) VALUE ('003','0077','51');
 INSERT INTO MOVIE_DIRECTOR (DRCTR_ID, MOVIE_ID, DRCTR_AGE) VALUE ('025','0041','65');
 INSERT INTO MOVIE_DIRECTOR (DRCTR_ID, MOVIE_ID, DRCTR_AGE) VALUE ('099','0039','49');
 INSERT INTO MOVIE_DIRECTOR (DRCTR_ID, MOVIE_ID, DRCTR_AGE) VALUE ('068','0055','47');
 INSERT INTO MOVIE_DIRECTOR (DRCTR_ID, MOVIE_ID, DRCTR_AGE) VALUE ('071','0007','46');
 
SELECT * FROM MOVIE_INFO UNION SELECT * FROM MOVIE_DIRECTOR;
/*
 Question 2 (10 marks)
 
 Create a query that lists the department number, employee number, and salaries of all employees in department D11.  
 UNION the same information , but this time sum up all the salaries to create a one line summary entry for the D11 department (hint sum the salary).  Sort the list by Salary.
 
*/

SELECT EMPLOYEE.EMPNO, EMPLOYEE.SALARY, DEPARTMENT.DEPTNO FROM EMPLOYEE, DEPARTMENT
WHERE DEPTNO = 'D11' ;

SELECT EMPLOYEE.EMPNO, EMPLOYEE.SALARY, DEPARTMENT.DEPTNO FROM EMPLOYEE, DEPARTMENT
WHERE DEPTNO = 'D11' 
UNION SELECT EMPLOYEE.EMPNO, SUM(EMPLOYEE.SALARY) AS 'SUMOFSALARY', DEPARTMENT.DEPTNO FROM EMPLOYEE, DEPARTMENT
WHERE DEPTNO = 'D11'
ORDER BY SALARY ASC;


/*
 Question 3 (10 marks)
 
a )  Write a query that uses NATURAL JOIN TO connect the EMPLOYEE and EMPPROJACT table.   Include the Employee number , First and Last name, Salary, Salary increased by 3% and Project number      ( 3 marks )
 
b) Use INNER JOIN OR JOIN with the same query with USING statement   ( 3 marks )

 
c) Use INNER JOIN OR JOIN with the same query with joined columns (hint a = a )    ( 4 marks )
 
*/
SELECT EMPLOYEE.EMPNO, EMPLOYEE.FIRSTNME,EMPLOYEE.LASTNAME,EMPLOYEE.SALARY, ROUND(EMPLOYEE.SALARY + (EMPLOYEE.SALARY * 0.03),2) AS '3% INCREASE IN SALARY', EMPPROJACT.PROJNO FROM EMPLOYEE NATURAL JOIN EMPPROJACT; 

SELECT EMPLOYEE.EMPNO, EMPLOYEE.FIRSTNME,EMPLOYEE.LASTNAME,EMPLOYEE.SALARY, ROUND(EMPLOYEE.SALARY + (EMPLOYEE.SALARY * 0.03),2) AS '3% INCREASE IN SALARY', EMPPROJACT.PROJNO FROM EMPLOYEE INNER JOIN EMPPROJACT USING (EMPNO); 

SELECT EMPLOYEE.EMPNO, EMPLOYEE.FIRSTNME,EMPLOYEE.LASTNAME,EMPLOYEE.SALARY, ROUND(EMPLOYEE.SALARY + (EMPLOYEE.SALARY * 0.03),2) AS '3% INCREASE IN SALARY', EMPPROJACT.PROJNO FROM EMPLOYEE INNER JOIN EMPPROJACT
ON EMPLOYEE.EMPNO = EMPPROJACT.EMPNO; 
/*
 Question 4 ( 25 marks )
 
  a) Create three tables.  Two of the tables will have PRIMARY KEYS (mininum 3 columns in each table) and the third table will have two columns that are the foreign keys to each of the PRIMARY KEYS (6 marks)
 
 b) Populate these table with data (5 marks)
 
 c) Create a SELECT statement using NATURAL JOINS to connect the three tables together (7 marks)
 
 d) Run the Reverse Engineer function in MySQL workbench on these tables and provide the .MWB file in your submission ( 7 marks )
 
*/

CREATE TABLE CARINFO_1 (
CAR_ID INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,
MANUFACTURER CHAR(15) NOT NULL,
MODELNAME VARCHAR(30) NOT NULL
);

INSERT INTO CARINFO_1(MANUFACTURER, MODELNAME)
VALUES
('TESLA','MODEL X'),
('MERCEDES', 'C250'),
('ACURA', 'ILX'),
('BMW','M4'),
('LAMBORGHINI', 'URUS'),
('HONDA','CIVIC'),
('DODGE','CHARGER'),
('FORD', 'MUSTANG');

CREATE TABLE CARINFO_2 (
CAR_ID INT UNSIGNED NOT NULL,
COLOR_ID VARCHAR(10) NOT NULL PRIMARY KEY,
PRODUCTION_YEAR YEAR NOT NULL
);

INSERT INTO CARINFO_2
VALUES
('1','WHITE06','2015'),
('2', 'BLACK02', '1993'),
('3', 'GOLDEN04', '2013'),
('4', 'CYAN09', '2014'),
('5', 'ORANGE11', '2018'),
('6', 'GREY03', '1972'),
('7', 'SILVER07', '2006'),
('8', 'RED05', '1965');

CREATE TABLE CARINFO_3 (
CAR_ID INT UNSIGNED NOT NULL,
COLOR_ID VARCHAR(10) NOT NULL,
NUMBER_PLATE VARCHAR(20) NOT NULL,
CAR_PRICE DEC(10) NOT NULL,
FOREIGN KEY (CAR_ID) REFERENCES CARINFO_1(CAR_ID),
FOREIGN KEY (COLOR_ID) REFERENCES CARINFO_2(COLOR_ID) 

);

INSERT INTO CARINFO_3
VALUES 
('1','WHITE06','RYUK99','123600'),
('2','BLACK02','FIRE36','51000'),
('3','GOLDEN04','HELL66','30805'),
('4','CYAN09','FURY45','89000'),
('5','ORANGE11','HATER00','252695'),
('6','GREY03','MONEY100','46200'),
('7','SILVER07','RANK01','29895'),
('8','RED05','SORRY2','50495');

SELECT CARINFO_1.CAR_ID, CARINFO_2.COLOR_ID FROM CARINFO_1, CARINFO_2
NATURAL JOIN CARINFO_3
WHERE CARINFO_1.CAR_ID = CARINFO_3.CAR_ID
AND CARINFO_2.COLOR_ID = CARINFO_3.COLOR_ID
AND CARINFO_1.CAR_ID = CARINFO_2.CAR_ID
AND CARINFO_2.CAR_ID = CARINFO_3.CAR_ID ;
 /*ON CARINFO_1.CAR_ID = CARINFO_3.CAR_ID
 JOIN CARINFO_2
ON CARINFO_2.COLOR_ID = CARINFO_3.COLOR_ID; */




/*
 Question 5 (15 marks)
 
  Write a query that uses INNER JOIN TO connect the EMPLOYEE, EMPPROJACT, PROJACT and PROJECT tables.   Include the Project number , Department number, Project start and end date and AC STAFF  
WHERE They belong to department A00 , Salary is more than or equal to 65 percent of $15,000 AND Salary is less than or equal to 130 percent of $40,000 

   
*/
SELECT EMPPROJACT.PROJNO, EMPLOYEE.WORKDEPT, PROJECT.PRSTDATE, PROJECT.PRENDATE, PROJACT.ACSTAFF FROM PROJECT, PROJACT, EMPLOYEE, EMPPROJACT
WHERE EMPLOYEE.WORKDEPT = 'A00'
AND EMPLOYEE.SALARY >= 15000 * 0.65
AND EMPLOYEE.SALARY <= 40000 * 1.3 ;


/*
 Question 6 (15 marks)
 
 Create a query that lists empno, projno, emptime, emendate.  Left join the project to the empprojact table using projno and full join the emp_act table using empno and then right join employee table using empno. 
 Where projno is AD3113 and empno is 000270 and emptime is greater than 0.5
 
 
*/
SELECT EMPPROJACT.EMPNO, EMPPROJACT.PROJNO, EMPPROJACT.EMPTIME, EMPPROJACT.EMENDATE FROM PROJECT
LEFT JOIN EMPPROJACT
ON PROJECT.PROJNO = EMPPROJACT.PROJNO
WHERE EMPPROJACT.PROJNO = 'AD3113'
AND EMPPROJACT.EMPNO = '000270'
AND EMPPROJACT.EMPTIME > 0.5 ;

/* for the full join, we need to do left join UNION right join in workbench since the FULL JOIN COMMAND is not working in Workbench */
SELECT EMPPROJACT.EMPNO, EMPPROJACT.PROJNO, EMPPROJACT.EMPTIME, EMPPROJACT.EMENDATE FROM EMPPROJACT
LEFT JOIN ACT
ON EMPPROJACT.ACTNO = ACT.ACTNO
WHERE EMPPROJACT.PROJNO = 'AD3113'
AND EMPPROJACT.EMPNO = '000270'
AND EMPPROJACT.EMPTIME > 0.5 
UNION
SELECT EMPPROJACT.EMPNO, EMPPROJACT.PROJNO, EMPPROJACT.EMPTIME, EMPPROJACT.EMENDATE FROM EMPPROJACT
RIGHT JOIN ACT
ON EMPPROJACT.ACTNO = ACT.ACTNO
WHERE EMPPROJACT.PROJNO = 'AD3113'
AND EMPPROJACT.EMPNO = '000270'
AND EMPPROJACT.EMPTIME > 0.5 ;

SELECT EMPPROJACT.EMPNO, EMPPROJACT.PROJNO, EMPPROJACT.EMPTIME, EMPPROJACT.EMENDATE FROM EMPPROJACT
RIGHT JOIN EMPLOYEE
ON EMPPROJACT.EMPNO = EMPLOYEE.EMPNO
WHERE EMPPROJACT.PROJNO = 'AD3113'
AND EMPPROJACT.EMPNO = '000270'
AND EMPPROJACT.EMPTIME > 0.5 ;


/* SELECT EMPPROJACT.EMPNO, EMPPROJACT.PROJNO, EMPPROJACT.EMPTIME, EMPPROJACT.EMENDATE FROM EMPPROJACT
FULL JOIN EMP_ACT
ON EMPPROJACT.EMPNO = EMP_ACT.EMPNO;

SELECT EMPPROJACT.EMPNO, EMPPROJACT.PROJNO, EMPPROJACT.EMPTIME, EMPPROJACT.EMENDATE FROM EMPPROJACT
RIGHT JOIN EMPLOYEE
ON EMPPROJACT.EMPNO = EMPLOYEE.EMPNO; */

/*
