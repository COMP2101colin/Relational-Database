 CREATE DATABASE ASSIGNMENT2;
 USE ASSIGNMENT2;
 
 /*
 Question 1
 
 Write 2 statements to Create two tables that have a way to force uniqueness from row to row and are related by one of their columns ( make sure you have a least 1 date column )   ( 15 marks )
 
  
 */
 CREATE TABLE MOVIE_INFO(
 MOVIE_ID NUMERIC(30) NOT NULL,
 MOVIE_TITLE VARCHAR(30) NOT NULL,
 MOVIE_GENRE VARCHAR(30) NOT NULL,
 MOVIE_RATING ENUM('0','1','2','3','4','5','6','7','8','9','10') DEFAULT '0',
 RELEASE_DATE DATE,
 PRIMARY KEY (MOVIE_ID));
 
 CREATE TABLE MOVIE_DIRECTOR(
 DRCTR_ID NUMERIC(30) NOT NULL,
 MOVIE_ID NUMERIC(30) NOT NULL,
 FIRST_NAME VARCHAR(30) NOT NULL,
 LAST_NAME VARCHAR(30) NOT NULL,
 DRCTR_AGE NUMERIC(30) NOT NULL,
 PRIMARY KEY (DRCTR_ID),
 FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE_INFO(MOVIE_ID));
 /*
 Question 2
/////// NOTE rember the order of which table you insert into first is important
 
 Write 10 statements to add to the source table you created in question 1   ( 10 marks )
 
 Write 10 statements to add to the dependant table you created in question 1  ( 10 marks )
  
 */
 INSERT INTO MOVIE_INFO (MOVIE_ID, MOVIE_TITLE, MOVIE_GENRE, MOVIE_RATING, RELEASE_DATE) VALUE ('0023','THOR:RAGNAROK','ACTION','8','2017-09-03');
 INSERT INTO MOVIE_INFO (MOVIE_ID, MOVIE_TITLE, MOVIE_GENRE, MOVIE_RATING, RELEASE_DATE) VALUE ('0077','FAST8','ADVENTURE','5','2017-04-14');
 INSERT INTO MOVIE_INFO (MOVIE_ID, MOVIE_TITLE, MOVIE_GENRE, MOVIE_RATING, RELEASE_DATE) VALUE ('0041','BEAUTY AND THE BEAST','ROMANCE','7','2017-03-17');
 INSERT INTO MOVIE_INFO (MOVIE_ID, MOVIE_TITLE, MOVIE_GENRE, MOVIE_RATING, RELEASE_DATE) VALUE ('0039','WONDER WOMAN','ACTION','9','2017-05-15');
 INSERT INTO MOVIE_INFO (MOVIE_ID, MOVIE_TITLE, MOVIE_GENRE, MOVIE_RATING, RELEASE_DATE) VALUE ('0055','STAR WARS:THE LAST JEDI','SCI-FI','8','2017-12-15');
 INSERT INTO MOVIE_INFO (MOVIE_ID, MOVIE_TITLE, MOVIE_GENRE, MOVIE_RATING, RELEASE_DATE) VALUE ('0007','JUMANJI','COMEDY','3','2017-12-05');
 INSERT INTO MOVIE_INFO (MOVIE_ID, MOVIE_TITLE, MOVIE_GENRE, MOVIE_RATING, RELEASE_DATE) VALUE ('0013','DESPICABLE ME 3','FAMILY','6','2017-06-30');
 INSERT INTO MOVIE_INFO (MOVIE_ID, MOVIE_TITLE, MOVIE_GENRE, MOVIE_RATING, RELEASE_DATE) VALUE ('0062','THE GREAT WALL','ADVENTURE','4','2017-02-17');
 INSERT INTO MOVIE_INFO (MOVIE_ID, MOVIE_TITLE, MOVIE_GENRE, MOVIE_RATING, RELEASE_DATE) VALUE ('0050','LOGAN','SCI-FI','10','2017-03-01');
 INSERT INTO MOVIE_INFO (MOVIE_ID, MOVIE_TITLE, MOVIE_GENRE, MOVIE_RATING, RELEASE_DATE) VALUE ('0001','SMURFS:THE LOST VILLAGE','COMEDY','6','2017-04-07');
 
 INSERT INTO MOVIE_DIRECTOR (DRCTR_ID, MOVIE_ID, FIRST_NAME, LAST_NAME, DRCTR_AGE) VALUE ('049','0023','TAIKA','WAITITI','45');
 INSERT INTO MOVIE_DIRECTOR (DRCTR_ID, MOVIE_ID, FIRST_NAME, LAST_NAME, DRCTR_AGE) VALUE ('003','0077','GARY','GRAY','51');
 INSERT INTO MOVIE_DIRECTOR (DRCTR_ID, MOVIE_ID, FIRST_NAME, LAST_NAME, DRCTR_AGE) VALUE ('025','0041','BILL','CONDON','65');
 INSERT INTO MOVIE_DIRECTOR (DRCTR_ID, MOVIE_ID, FIRST_NAME, LAST_NAME, DRCTR_AGE) VALUE ('099','0039','PATTY','JENKINS','49');
 INSERT INTO MOVIE_DIRECTOR (DRCTR_ID, MOVIE_ID, FIRST_NAME, LAST_NAME, DRCTR_AGE) VALUE ('068','0055','RIAN','JOHNSON','47');
 INSERT INTO MOVIE_DIRECTOR (DRCTR_ID, MOVIE_ID, FIRST_NAME, LAST_NAME, DRCTR_AGE) VALUE ('071','0007','JAKE','KASDAN','46');
 INSERT INTO MOVIE_DIRECTOR (DRCTR_ID, MOVIE_ID, FIRST_NAME, LAST_NAME, DRCTR_AGE) VALUE ('042','0013','PIERRE','COFFIN','54');
 INSERT INTO MOVIE_DIRECTOR (DRCTR_ID, MOVIE_ID, FIRST_NAME, LAST_NAME, DRCTR_AGE) VALUE ('080','0062','YI-MOU','ZHANG','71');
 INSERT INTO MOVIE_DIRECTOR (DRCTR_ID, MOVIE_ID, FIRST_NAME, LAST_NAME, DRCTR_AGE) VALUE ('037','0050','JAMES','MANGOLD','57');
 INSERT INTO MOVIE_DIRECTOR (DRCTR_ID, MOVIE_ID, FIRST_NAME, LAST_NAME, DRCTR_AGE) VALUE ('015','0001','KELLY','ASBURY','60');
 /*
 Question 3
 
 Write a SELECT statement that uses the LIKE statement and a character to find some of the records in one of your tables you created in Question 1 ( Use either the % or the _ for the rest of your wildcard)   ( 10 marks )
 
  
 */
 SELECT * FROM MOVIE_DIRECTOR
 WHERE FIRST_NAME LIKE '%A%';
 
  /*
 Question 4
 
 Write a SELECT statement that uses the BETWEEN statement to find some of the records in one of your tables using the date column you created in Question 1  ( 10 marks )
 
  
 */
 SELECT * FROM MOVIE_INFO
 WHERE RELEASE_DATE BETWEEN '2017-03-01' AND '2017-05-31' ;
 
 /*
 Question 5
 
 Write a SELECT statement that uses the BETWEEN statement and sorts the data by 2 of the columns one in Ascending and one in Descending order on the tables you created in Question 1  ( 10 marks )
 
  
 */
SELECT * FROM MOVIE_INFO
WHERE MOVIE_RATING BETWEEN '2' AND '8' 
ORDER BY MOVIE_ID ASC, MOVIE_TITLE DESC;

 
  /*
 Question 6
 
 Write a SELECT statement that selects a list of values (using the IN operator) from one of your tables, then use that same query and use the NOT operator to get the opposite data on the tables you created in Question 1   ( 10 marks )
 
  
 */
 SELECT * FROM MOVIE_INFO
 WHERE MOVIE_ID IN ('0023','0041','0062','0077');
 
 SELECT * FROM MOVIE_INFO
 WHERE MOVIE_ID NOT IN ('0023','0041','0062','0077')
